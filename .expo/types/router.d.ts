/* eslint-disable */
import * as Router from 'expo-router';

export * from 'expo-router';

declare module 'expo-router' {
  export namespace ExpoRouter {
    export interface __routes<T extends string | object = string> {
      hrefInputParams: { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `/auth/FogotPassword`; params?: Router.UnknownInputParams; } | { pathname: `/auth/ForgotPasswordOTP`; params?: Router.UnknownInputParams; } | { pathname: `/auth/logIn`; params?: Router.UnknownInputParams; } | { pathname: `/auth/PasswordRestSuccessful`; params?: Router.UnknownInputParams; } | { pathname: `/auth/ResetPassword`; params?: Router.UnknownInputParams; } | { pathname: `/auth/SignIn`; params?: Router.UnknownInputParams; } | { pathname: `/auth/Translate`; params?: Router.UnknownInputParams; } | { pathname: `/Befor Born Baby/GuidanceAndMorale`; params?: Router.UnknownInputParams; } | { pathname: `/utils/i18n`; params?: Router.UnknownInputParams; } | { pathname: `/utils/translations`; params?: Router.UnknownInputParams; };
      hrefOutputParams: { pathname: Router.RelativePathString, params?: Router.UnknownOutputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownOutputParams } | { pathname: `/`; params?: Router.UnknownOutputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownOutputParams; } | { pathname: `/auth/FogotPassword`; params?: Router.UnknownOutputParams; } | { pathname: `/auth/ForgotPasswordOTP`; params?: Router.UnknownOutputParams; } | { pathname: `/auth/logIn`; params?: Router.UnknownOutputParams; } | { pathname: `/auth/PasswordRestSuccessful`; params?: Router.UnknownOutputParams; } | { pathname: `/auth/ResetPassword`; params?: Router.UnknownOutputParams; } | { pathname: `/auth/SignIn`; params?: Router.UnknownOutputParams; } | { pathname: `/auth/Translate`; params?: Router.UnknownOutputParams; } | { pathname: `/Befor Born Baby/GuidanceAndMorale`; params?: Router.UnknownOutputParams; } | { pathname: `/utils/i18n`; params?: Router.UnknownOutputParams; } | { pathname: `/utils/translations`; params?: Router.UnknownOutputParams; };
      href: Router.RelativePathString | Router.ExternalPathString | `/${`?${string}` | `#${string}` | ''}` | `/_sitemap${`?${string}` | `#${string}` | ''}` | `/auth/FogotPassword${`?${string}` | `#${string}` | ''}` | `/auth/ForgotPasswordOTP${`?${string}` | `#${string}` | ''}` | `/auth/logIn${`?${string}` | `#${string}` | ''}` | `/auth/PasswordRestSuccessful${`?${string}` | `#${string}` | ''}` | `/auth/ResetPassword${`?${string}` | `#${string}` | ''}` | `/auth/SignIn${`?${string}` | `#${string}` | ''}` | `/auth/Translate${`?${string}` | `#${string}` | ''}` | `/Befor Born Baby/GuidanceAndMorale${`?${string}` | `#${string}` | ''}` | `/utils/i18n${`?${string}` | `#${string}` | ''}` | `/utils/translations${`?${string}` | `#${string}` | ''}` | { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `/auth/FogotPassword`; params?: Router.UnknownInputParams; } | { pathname: `/auth/ForgotPasswordOTP`; params?: Router.UnknownInputParams; } | { pathname: `/auth/logIn`; params?: Router.UnknownInputParams; } | { pathname: `/auth/PasswordRestSuccessful`; params?: Router.UnknownInputParams; } | { pathname: `/auth/ResetPassword`; params?: Router.UnknownInputParams; } | { pathname: `/auth/SignIn`; params?: Router.UnknownInputParams; } | { pathname: `/auth/Translate`; params?: Router.UnknownInputParams; } | { pathname: `/Befor Born Baby/GuidanceAndMorale`; params?: Router.UnknownInputParams; } | { pathname: `/utils/i18n`; params?: Router.UnknownInputParams; } | { pathname: `/utils/translations`; params?: Router.UnknownInputParams; };
    }
  }
}
